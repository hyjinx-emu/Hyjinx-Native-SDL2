name: publish

on:
  push:
  release:
    types: [ published ]
    
permissions:
  contents: read
  pull-requests: write

jobs:
  build-native:
    name: build (${{ matrix.platform.name }})
    runs-on: ${{ matrix.platform.os }}
    
    strategy:
      matrix:
        platform:
          - { name: win-x64,     os: windows-latest,  arch: x64 }
          - { name: linux-x64,   os: ubuntu-latest,   arch: amd64 }
      fail-fast: false
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create staging directory
        shell: bash
        run: |
          mkdir "dist"
          mkdir "dist/runtimes"
        
      - name: Stage existing
        shell: bash
        run: cp "runtimes/${{ matrix.platform.name }}" "dist/runtimes"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "native-${{ matrix.platform.name }}"
          path: "dist/"
      
  build-dotnet:
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Build
        run: dotnet build ./src/SDL2-CS/SDL2-CS.csproj -c Release -o "dist"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotnet
          path: "dist/"
          
  package:
    runs-on: windows-latest
    needs: [ build-native, build-dotnet ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true
          
      - name: Set up NuGet
        uses: nuget/setup-nuget@v2
        with:
          nuget-api-key: ${{ secrets.NUGET_TOKEN }}
          nuget-version: latest

      - name: Package preview
        if: github.event.action != 'published'
        shell: powershell
        run: nuget pack SDL2-CS.nuspec -OutputDirectory ./out -Suffix "preview.${{ github.run_number }}"

      - name: Package release
        if: github.event.action == 'published'
        shell: powershell
        run: nuget pack SDL2-CS.nuspec -OutputDirectory ./out
        
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: ./out/*.nupkg
    
  publish:
    runs-on: windows-latest
    needs: package

    steps:
      - name: Set up NuGet
        uses: nuget/setup-nuget@v2
        with:
          nuget-version: latest

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: dist/

      - name: Push package(s)
        shell: powershell
        run: |
          Get-ChildItem -Path "dist" -Filter *.nupkg | ForEach-Object {
            Write-Host "Pushing $($_.FullName)"
            nuget push $_.FullName -Source https://api.nuget.org/v3/index.json -ApiKey "${{ secrets.NUGET_TOKEN }}"
          }
